# Datasource connection properties
# spring.mail.host=smtp.mailtrap.io
# spring.mail.port=2525
# spring.mail.username=f142a2e3c11e4a
# spring.mail.password=97aba4d1eed29c
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=CyFireAdm1n@Gmail.com
spring.mail.password=~*CYfaiyuh!2
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Specify the url to your mysql server:
# Hostname can be localhost or your teams remote server (e.g., cs309-vc-3.misc.iastate.edu)
# Port should be 3306
# Keep the parameters after the '?' to avoid a jdbc warning
# Text after last '/' is the database. This should be created in your mysql server.
# spring.datasource.url=jdbc:mysql://cs309-vc-3.misc.iastate.edu:3306/CyFire?verifyServerCertificate=false&useSSL=false&requireSSL=false
spring.datasource.url=jdbc:mysql://cs309-vc-3.misc.iastate.edu:3306/CyFire?serverTimezone=America/Chicago

# user for mysql server
spring.datasource.username=team3
# password to mysql server
spring.datasource.password=HelloWorld3_
# this is the port your web server will run on
server.port=8080

# JPA
# This tells jdbc to create the tables if they do not already exist
# Defaults to none, in which case you must make the tables to match the Entity owners
# Run the 'src/main/resources/db/mysql/data.sql' script in MySQL workbench or CLI to insert dummy data
# spring.jpa.hibernate.ddl-auto=create
# This will make it so that it doesn't reset the database every time.
spring.jpa.hibernate.ddl-auto=update

# What does this do?
logging.file=application.log
# Logging
logging.level.org.springframework=INFO


